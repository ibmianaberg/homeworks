{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jane\\\\Desktop\\\\first_app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [messageList, setMessage] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(SendMessage, {\n        setMessage: setMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), messageList.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: e\n      }, new Date(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uuy+iKT9NdpiR3jil/IHtkni6TY=\");\n\n_c = App;\nexport default App; // Добавить в компонент App поле стейта а messageList. В нем хранить массив объектов -\n// сообщений (объект должен содержать, как минимум, поля text и author). Начальное\n// значение - пустой массив).\n// const SendMessage = ({ setMessage }) => {\n//   const [text, setText] = useState(\"\");\n//   const [author, setAuthor] = useState(\"\");\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         value={text}\n//         onChange={(e) => {\n//           setText(e.target.value);\n//         }}\n//       />\n//       <input\n//         type=\"text\"\n//         value={author}\n//         onChange={(e) => {\n//           setAuthor(e.target.value);\n//         }}\n//       />\n//       <button\n//         onClick={() => {\n//           setMessage((p) => [...p, text, author]);\n//         }}\n//       >\n//         Отправить в интернеты\n//       </button>\n//     </div>\n//   );\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","messageList","setMessage","map","e","Date"],"sources":["C:/Users/Jane/Desktop/first_app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport '.'\n\nfunction App() {\n  const [messageList, setMessage] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <h1>\n        <SendMessage setMessage={setMessage} />\n        {messageList.map((e) => (\n          <div key={new Date()}>{e}</div>\n        ))}\n      </h1>\n\n      <header className=\"App-header\">\n        <div className=\"block\">\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n// Добавить в компонент App поле стейта а messageList. В нем хранить массив объектов -\n// сообщений (объект должен содержать, как минимум, поля text и author). Начальное\n// значение - пустой массив).\n\n// const SendMessage = ({ setMessage }) => {\n//   const [text, setText] = useState(\"\");\n//   const [author, setAuthor] = useState(\"\");\n\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         value={text}\n//         onChange={(e) => {\n//           setText(e.target.value);\n//         }}\n//       />\n//       <input\n//         type=\"text\"\n//         value={author}\n//         onChange={(e) => {\n//           setAuthor(e.target.value);\n//         }}\n//       />\n//       <button\n//         onClick={() => {\n//           setMessage((p) => [...p, text, author]);\n//         }}\n//       >\n//         Отправить в интернеты\n//       </button>\n//     </div>\n//   );\n// };"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,GAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,WAAD,EAAcC,UAAd,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA,wBACE,QAAC,WAAD;QAAa,UAAU,EAAEG;MAAzB;QAAA;QAAA;QAAA;MAAA,QADF,EAEGD,WAAW,CAACE,GAAZ,CAAiBC,CAAD,iBACf;QAAA,UAAuBA;MAAvB,GAAU,IAAIC,IAAJ,EAAV;QAAA;QAAA;QAAA;MAAA,QADD,CAFH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAQ,SAAS,EAAC,YAAlB;MAAA,uBACE;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GAlBQL,G;;KAAAA,G;AAoBT,eAAeA,GAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}