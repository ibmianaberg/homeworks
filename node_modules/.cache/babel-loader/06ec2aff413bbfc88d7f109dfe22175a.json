{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jane\\\\Desktop\\\\first_app\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [messageList, setMessage] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(SendMessage, {\n        setMessage: setMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), messageList.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: e\n      }, new Date(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uuy+iKT9NdpiR3jil/IHtkni6TY=\");\n\n_c = App;\nexport default App; // Добавить в компонент App поле стейта а messageList. В нем хранить массив объектов -\n// сообщений (объект должен содержать, как минимум, поля text и author). Начальное\n// значение - пустой массив).\n\nconst SendMessage = _ref => {\n  _s2();\n\n  let {\n    setMessage\n  } = _ref;\n  const [text, setText] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: e => {\n        setText(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: author,\n      onChange: e => {\n        setAuthor(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setMessage(p => [...p, text, author]);\n      },\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 \\u0438\\u043D\\u0442\\u0435\\u0440\\u043D\\u0435\\u0442\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SendMessage, \"zsK5dsOK6XmPRH4bhREjqE9E2G0=\");\n\n_c2 = SendMessage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SendMessage\");","map":{"version":3,"names":["useState","App","messageList","setMessage","map","e","Date","SendMessage","text","setText","author","setAuthor","target","value","p"],"sources":["C:/Users/Jane/Desktop/first_app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [messageList, setMessage] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <h1>\n        <SendMessage setMessage={setMessage} />\n        {messageList.map((e) => (\n          <div key={new Date()}>{e}</div>\n        ))}\n      </h1>\n\n      <header className=\"App-header\">\n        <div className=\"block\">\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n// Добавить в компонент App поле стейта а messageList. В нем хранить массив объектов -\n// сообщений (объект должен содержать, как минимум, поля text и author). Начальное\n// значение - пустой массив).\n\nconst SendMessage = ({ setMessage }) => {\n  const [text, setText] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={text}\n        onChange={(e) => {\n          setText(e.target.value);\n        }}\n      />\n      <input\n        type=\"text\"\n        value={author}\n        onChange={(e) => {\n          setAuthor(e.target.value);\n        }}\n      />\n      <button\n        onClick={() => {\n          setMessage((p) => [...p, text, author]);\n        }}\n      >\n        Отправить в интернеты\n      </button>\n    </div>\n  );\n};"],"mappings":";;;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,WAAD,EAAcC,UAAd,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA,wBACE,QAAC,WAAD;QAAa,UAAU,EAAEG;MAAzB;QAAA;QAAA;QAAA;MAAA,QADF,EAEGD,WAAW,CAACE,GAAZ,CAAiBC,CAAD,iBACf;QAAA,UAAuBA;MAAvB,GAAU,IAAIC,IAAJ,EAAV;QAAA;QAAA;QAAA;MAAA,QADD,CAFH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAQ,SAAS,EAAC,YAAlB;MAAA,uBACE;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GAlBQL,G;;KAAAA,G;AAoBT,eAAeA,GAAf,C,CAEA;AACA;AACA;;AAEA,MAAMM,WAAW,GAAG,QAAoB;EAAA;;EAAA,IAAnB;IAAEJ;EAAF,CAAmB;EACtC,MAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;EAEA,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,MADP;MAEE,KAAK,EAAEQ,IAFT;MAGE,QAAQ,EAAGH,CAAD,IAAO;QACfI,OAAO,CAACJ,CAAC,CAACO,MAAF,CAASC,KAAV,CAAP;MACD;IALH;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MACE,IAAI,EAAC,MADP;MAEE,KAAK,EAAEH,MAFT;MAGE,QAAQ,EAAGL,CAAD,IAAO;QACfM,SAAS,CAACN,CAAC,CAACO,MAAF,CAASC,KAAV,CAAT;MACD;IALH;MAAA;MAAA;MAAA;IAAA,QARF,eAeE;MACE,OAAO,EAAE,MAAM;QACbV,UAAU,CAAEW,CAAD,IAAO,CAAC,GAAGA,CAAJ,EAAON,IAAP,EAAaE,MAAb,CAAR,CAAV;MACD,CAHH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD,CA7BD;;IAAMH,W;;MAAAA,W"},"metadata":{},"sourceType":"module"}