{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jane\\\\Desktop\\\\first_app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { SendMessage } from \"./SendMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [messageList, setMessageList] = useState([]);\n  const [mapIsNeed, setMapIsNeed] = useState(false);\n  useEffect(() => {\n    if (messageList.length > 0 && mapIsNeed === true) {\n      setTimeout(() => {\n        setMessageList([...messageList, {\n          text: `Вы восхитительны, ${messageList[messageList.length - 1].author}!`,\n          author: \"bot\",\n          human: false\n        }]);\n        setMapIsNeed(!mapIsNeed);\n      }, 1500);\n    }\n  }, [messageList]);\n  console.log(messageList); // const mapListHelper =\n  //    messageList\n  //     .filter((e) => e.human)\n  //     .map(\n  //       (e, i) => (\n  //         <div className=\"leftColumn\" key={i}>\n  //           {e.text} {e.author}\n  //         </div>\n  //       )\n  //     );\n  // const mapListHelper2 = messageList\n  //     .filter((e) => !e.human)\n  //     .map((e, i) => (\n  //       <div className=\"rightColumn\" key={i}>\n  //         {e.text} {e.author}\n  //       </div>\n  //     ))\n\n  const sortColumnList = massage.list;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(SendMessage, {\n        setMessageList: setMessageList,\n        mapIsNeed: mapIsNeed,\n        setMapIsNeed: setMapIsNeed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), mapListHelper]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"3ehZCB7b5KEl4xyIeC9ajqWq3vM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","SendMessage","App","messageList","setMessageList","mapIsNeed","setMapIsNeed","length","setTimeout","text","author","human","console","log","sortColumnList","massage","list","mapListHelper"],"sources":["C:/Users/Jane/Desktop/first_app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { SendMessage } from \"./SendMessage\";\n\nconst App = () => {\n  const [messageList, setMessageList] = useState([]);\n  const [mapIsNeed, setMapIsNeed] = useState(false);\n\n  useEffect(() => {\n    if (messageList.length > 0 && mapIsNeed === true) {\n      setTimeout(() => {\n        setMessageList([\n          ...messageList,\n          {\n            text: `Вы восхитительны, ${\n              messageList[messageList.length - 1].author\n            }!`,\n            author: \"bot\",\n            human: false,\n          },\n        ]);\n        setMapIsNeed(!mapIsNeed);\n      }, 1500);\n    }\n  }, [messageList]);\n\n  console.log(messageList);\n\n  // const mapListHelper =\n  //    messageList\n  //     .filter((e) => e.human)\n  //     .map(\n  //       (e, i) => (\n  //         <div className=\"leftColumn\" key={i}>\n  //           {e.text} {e.author}\n  //         </div>\n  //       )\n  //     );\n\n  // const mapListHelper2 = messageList\n  //     .filter((e) => !e.human)\n  //     .map((e, i) => (\n  //       <div className=\"rightColumn\" key={i}>\n  //         {e.text} {e.author}\n  //       </div>\n  //     ))\n\n  const sortColumnList = massage.list\n\n  return (\n    <div className=\"App\">\n      <h1>\n        <SendMessage\n          setMessageList={setMessageList}\n          mapIsNeed={mapIsNeed}\n          setMapIsNeed={setMapIsNeed}\n        />\n        {mapListHelper}\n      </h1>\n\n      <header className=\"App-header\">\n        <div className=\"block\"></div>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EAEAD,SAAS,CAAC,MAAM;IACd,IAAII,WAAW,CAACI,MAAZ,GAAqB,CAArB,IAA0BF,SAAS,KAAK,IAA5C,EAAkD;MAChDG,UAAU,CAAC,MAAM;QACfJ,cAAc,CAAC,CACb,GAAGD,WADU,EAEb;UACEM,IAAI,EAAG,qBACLN,WAAW,CAACA,WAAW,CAACI,MAAZ,GAAqB,CAAtB,CAAX,CAAoCG,MACrC,GAHH;UAIEA,MAAM,EAAE,KAJV;UAKEC,KAAK,EAAE;QALT,CAFa,CAAD,CAAd;QAUAL,YAAY,CAAC,CAACD,SAAF,CAAZ;MACD,CAZS,EAYP,IAZO,CAAV;IAaD;EACF,CAhBQ,EAgBN,CAACF,WAAD,CAhBM,CAAT;EAkBAS,OAAO,CAACC,GAAR,CAAYV,WAAZ,EAtBgB,CAwBhB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMW,cAAc,GAAGC,OAAO,CAACC,IAA/B;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA,wBACE,QAAC,WAAD;QACE,cAAc,EAAEZ,cADlB;QAEE,SAAS,EAAEC,SAFb;QAGE,YAAY,EAAEC;MAHhB;QAAA;QAAA;QAAA;MAAA,QADF,EAMGW,aANH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAUE;MAAQ,SAAS,EAAC,YAAlB;MAAA,uBACE;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CA7DD;;GAAMf,G;;KAAAA,G;AA+DN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}