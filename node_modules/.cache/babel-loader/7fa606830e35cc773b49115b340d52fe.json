{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jane\\\\Desktop\\\\first_app\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const userName = \"Panda\";\n  const textForTexty = \"Everything is going to be good!\";\n  const [messageList, setMessages] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Myheader, {\n      name: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Message, {\n      texty: textForTexty\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(SendMessage, {\n        setMessage: setMessages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), messageList.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: e\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block\",\n        children: [\"Hello!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          autoFocus: true,\n          onClick: () => alert(\"You got two termal clips!\"),\n          children: \"Press on this button to became a programmer!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MTp67jNe3MVBO03h4qXhwmpU9J0=\");\n\n_c = App;\nexport default App; // Добавить в компонент App поле стейта а messageList. В нем хранить массив объектов -\n// сообщений (объект должен содержать, как минимум, поля text и author). Начальное\n// значение - пустой массив).\n\nconst SendMessage = _ref => {\n  _s2();\n\n  let {\n    setMessages\n  } = _ref;\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text // А onChange - действие в момент изменений в инпуте мы передаем функцию\n      // через которую состояние меняем (не состояние родителя а внутреннее состояние\n      //   компонента)\n      ,\n      onChange: e => {\n        setText(e.target.text);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setMessages(p => [...p, text]);\n      },\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 \\u0438\\u043D\\u0442\\u0435\\u0440\\u043D\\u0435\\u0442\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SendMessage, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n\n_c2 = SendMessage;\n\nconst Myheader = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panda\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"panda_h1\",\n      children: [\"Hello, \", props.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Myheader;\n\nconst Message = texty => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"texty\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" You are the best! \", texty.textForTexty, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Message;\n\nconst NewComponent = prop => {\n  _s3();\n\n  const [user, setUser] = useState({\n    name: \"Alex\"\n  });\n  console.log(\"render\", user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [user.name, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setUser(pervstate => ({ ...pervstate,\n          agree: true\n        }));\n      },\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(NewComponent, \"srQiP3bCeaCJ0eRZ3f33ut3CG7A=\");\n\n_c5 = NewComponent;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SendMessage\");\n$RefreshReg$(_c3, \"Myheader\");\n$RefreshReg$(_c4, \"Message\");\n$RefreshReg$(_c5, \"NewComponent\");","map":{"version":3,"names":["useState","App","userName","textForTexty","messageList","setMessages","map","e","alert","SendMessage","text","setText","target","p","Myheader","props","name","Message","texty","NewComponent","prop","user","setUser","console","log","pervstate","agree"],"sources":["C:/Users/Jane/Desktop/first_app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport  { useState } from \"react\";\n\nfunction App() {\n  const userName = \"Panda\";\n  const textForTexty = \"Everything is going to be good!\";\n  const [messageList, setMessages] = useState([])\n\n  return (\n    <div className=\"App\">\n      <Myheader name={userName} />\n      <Message texty={textForTexty} />\n      <NewComponent/>\n      <h1>\n        <SendMessage setMessage={setMessages}/>\n        {messageList.map((e) => (\n        <div>{e}</div>\n        ))}\n      </h1>\n\n      <header className=\"App-header\">\n        <div className=\"block\">\n          Hello!\n          <br />\n          <button\n            className=\"button\"\n            autoFocus\n            onClick={() => alert(\"You got two termal clips!\")}\n          >\n            Press on this button to became a programmer!\n          </button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n// Добавить в компонент App поле стейта а messageList. В нем хранить массив объектов -\n// сообщений (объект должен содержать, как минимум, поля text и author). Начальное\n// значение - пустой массив).\n\nconst SendMessage = ({ setMessages }) => {\n  const [text, setText] = useState(\"\")\n  \n  return (\n    <div>\n       <input\n        type=\"text\"\n        value={text}\n        // А onChange - действие в момент изменений в инпуте мы передаем функцию\n        // через которую состояние меняем (не состояние родителя а внутреннее состояние\n        //   компонента)\n        onChange ={(e) => {\n          setText(e.target.text);\n        }}\n      />\n       <button\n        onClick={() => {\n          setMessages((p => [...p, text]));\n        }}\n      >\n        Отправить в интернеты\n      </button>\n    </div>\n  )\n}\n\nconst Myheader = (props) => {\n  return (\n    <div className=\"panda\">\n      <h1 className=\"panda_h1\">Hello, {props.name}</h1>\n    </div>\n  );\n};\n\nconst Message = (texty) => {\n  return (\n    <div className=\"texty\">\n      <h2> You are the best! {texty.textForTexty} </h2>\n    </div>\n  );\n};\n\nconst NewComponent = (prop) => {\n  const [user, setUser] = useState({\n    name: \"Alex\",\n  });\n\n  console.log(\"render\", user);\n\n  return (\n    <div>\n      {user.name}\n      <button\n        onClick={() => {\n          setUser(pervstate => ({ ...pervstate, agree: true }));\n        }}\n      >\n        Click\n      </button>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}